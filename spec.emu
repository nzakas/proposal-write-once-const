<!doctype html>
<meta charset="utf8">
<link rel="stylesheet" href="./spec.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">
<script src="./spec.js"></script>
<pre class="metadata">
title: Write-Once `const` Declarations
stage: -1
contributors: Nicholas C. Zakas
</pre>

<emu-clause id="sec-let-and-const-declarations-static-semantics-early-errors">
  <h1>Static Semantics: Early Errors</h1>
  <emu-grammar>LexicalDeclaration : LetOrConst BindingList `;`</emu-grammar>
  <ul>
    <li>
      It is a Syntax Error if the BoundNames of |BindingList| contains *"let"*.
    </li>
    <li>
      It is a Syntax Error if the BoundNames of |BindingList| contains any duplicate entries.
    </li>
  </ul>
  <emu-grammar>LexicalBinding : BindingIdentifier Initializer?</emu-grammar>
  <ul>
  <del>
    <li>
      It is a Syntax Error if |Initializer| is not present and IsConstantDeclaration of the |LexicalDeclaration| containing this |LexicalBinding| is *true*.
    </li>
  </del>
  </ul>
</emu-clause>

<emu-clause id="sec-let-and-const-declarations-runtime-semantics-evaluation" type="sdo">
  <h1>Runtime Semantics: Evaluation</h1>
  <emu-grammar>LexicalDeclaration : LetOrConst BindingList `;`</emu-grammar>
  <emu-alg>
    1. Perform ? Evaluation of |BindingList|.
    1. Return ~empty~.
  </emu-alg>
  <emu-grammar>BindingList : BindingList `,` LexicalBinding</emu-grammar>
  <emu-alg>
    1. Perform ? Evaluation of |BindingList|.
    1. Return ? Evaluation of |LexicalBinding|.
  </emu-alg>
  <emu-grammar>LexicalBinding : BindingIdentifier</emu-grammar>
  <emu-alg>
    1. Let _lhs_ be ! ResolveBinding(StringValue of |BindingIdentifier|).
    1. Perform ! InitializeReferencedBinding(_lhs_, *undefined*).
    1. Return ~empty~.
  </emu-alg>
  <del>
  <emu-note>
    <p>A static semantics rule ensures that this form of |LexicalBinding| never occurs in a `const` declaration.</p>
  </emu-note>
  </del>
  <emu-grammar>LexicalBinding : BindingIdentifier Initializer</emu-grammar>
  <emu-alg>
    1. Let _bindingId_ be StringValue of |BindingIdentifier|.
    1. Let _lhs_ be ! ResolveBinding(_bindingId_).
    1. If IsAnonymousFunctionDefinition(|Initializer|) is *true*, then
      1. Let _value_ be ? NamedEvaluation of |Initializer| with argument _bindingId_.
    1. Else,
      1. Let _rhs_ be ? Evaluation of |Initializer|.
      1. Let _value_ be ? GetValue(_rhs_).
    1. Perform ! InitializeReferencedBinding(_lhs_, _value_).
    1. Return ~empty~.
  </emu-alg>
  <emu-grammar>LexicalBinding : BindingPattern Initializer</emu-grammar>
  <emu-alg>
    1. Let _rhs_ be ? Evaluation of |Initializer|.
    1. Let _value_ be ? GetValue(_rhs_).
    1. Let _env_ be the running execution context's LexicalEnvironment.
    1. Return ? BindingInitialization of |BindingPattern| with arguments _value_ and _env_.
  </emu-alg>
</emu-clause>
